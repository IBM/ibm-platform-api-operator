# Role copied from previous deploy/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: platform-api
    app.kubernetes.io/managed-by: platformapis.operator.ibm.com
    app.kubernetes.io/name: platformapis.operator.ibm.com
  name: ibm-platform-api-operator
rules:
# Rules copied from legacy format (pre-v1.0 kubebuilder)
- apiGroups:
  - ''
  resources:
  - configmaps
  - endpoints
  - events
  - persistentvolumeclaims
  - pods
  - secrets
  - serviceaccounts
  - services
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ''
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ''
  resources:
  - pods
  verbs:
  - deletecollection
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resourceNames:
  - ibm-platform-api-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
# keeping the following ingress permission so that old resource can be deleted during upgrade
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - operator.ibm.com
  resources:
  - platformapis
  - platformapis/finalizers
  - platformapis/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
##
## Base operator rules
##
# We need to get namespaces so the operator can read namespaces to ensure they exist
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
# We need to manage Helm release secrets
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - "*"
# We need to create events on CRs about things happening during reconciliation
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create

##
## Rules for operator.ibm.com/v1alpha1, Kind: PlatformAPI
##
- apiGroups:
  - operator.ibm.com
  resources:
  - platformapis
  - platformapis/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - services/finalizers
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch

##
## Rules for creating certificate
##
- apiGroups:
  - certmanager.k8s.io
  resources:
  - issuers
  verbs:
  - use
- apiGroups:
  - certmanager.k8s.io
  resources:
  - certificates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: platform-api
    app.kubernetes.io/managed-by: platformapis.operator.ibm.com
    app.kubernetes.io/name: platformapis.operator.ibm.com
  name: ibm-platform-api-operator
rules:
# Rules to clean up previous release's resources
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - passwordrules.icp.ibm.com
  resources:
  - customresourcedefinitions
  verbs:
  - delete
- apiGroups:
  - rbac.authorization.k8s.io
  resourceNames:
  - ibm-platform-api-operand
  resources:
  - clusterroles
  - clusterrolebindings
  verbs:
  - delete
# Rules to support legacy target namespace dropdown in legacy catalog-ui
- apiGroups:
  - ''
  resources:
  - serviceaccounts 
  verbs:
  - impersonate
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  resourceNames:
  verbs:
  - create
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  resourceNames:
  - ibm-platform-api-operand
  verbs:
  - delete
  - get
  - patch
  - update

# +kubebuilder:scaffold:rules
